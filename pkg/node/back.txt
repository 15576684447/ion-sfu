
	if natsServer == "" {
		natsServer = nprotoo.DefaultNatsURL
	}
	sn.np = nprotoo.NewNatsProtoo(natsServer)

// GetNatsProtoo .
func (sn *ServiceNode) GetNatsProtoo() *nprotoo.NatsProtoo {
	return sn.np
}


// NewRequestor .
func (sn *ServiceNode) NewRequestor(channel string) *nprotoo.Requestor {
	return sn.np.NewRequestor("rpc-" + channel)
}

// OnRequest .
func (sn *ServiceNode) OnRequest(listener nprotoo.RequestFunc) {
	channel := "rpc-" + sn.node.Info["id"]
	log.Infof("Listen request channel => %s", channel)
	sn.np.OnRequest(channel, listener)
}

// NewBroadcaster .
func (sn *ServiceNode) NewBroadcaster(channel string) *nprotoo.Broadcaster {
	return sn.np.NewBroadcaster("event-" + channel)
}

// OnBroadcast .
func (sn *ServiceNode) OnBroadcast(listener func(data map[string]interface{}, subj string)) {
	channel := "event-" + sn.node.Info["id"]
	log.Infof("Listen broadcast channel => %s", channel)
	sn.np.OnBroadcast(channel, listener)
}