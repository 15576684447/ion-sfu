version: '3.7'

services:
  web:
    build:
      dockerfile: web.Dockerfile
      context: .
    command: ["--port", "9000", "--ssl", "--cert", "/cert/cert.pem", "--key", "/cert/key.pem"]
    volumes:
      - "./configs:/cert"
    ports:
      - 8080:9000
    depends_on:
      - ion

  ion:
    build:
      dockerfile: Dockerfile
      context: .
    command: "-c /configs/ion.toml"
    volumes:
      - "./docker/ion.toml:/configs/ion.toml"
      - "./configs/cert.pem:/configs/cert.pem"
      - "./configs/key.pem:/configs/key.pem"
    ports:
      - 6666:6666 # rtp
      - 8443:8443 # websocket
    restart: on-failure
    depends_on:
      - rabbitmq
      - etcd

  islb:
    build:
      dockerfile: islb.Dockerfile
      context: .
    command: "-c /configs/islb.toml"
    volumes:
      - "./docker/islb.toml:/configs/islb.toml"
    restart: on-failure
    depends_on:
      - rabbitmq
      - etcd
      - redis

  rabbitmq:
    image: rabbitmq:3.8.2-management
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 3

  etcd:
    image: bitnami/etcd:3.4.3-debian-10-r10
    environment:
      - "ALLOW_NONE_AUTHENTICATION=yes"

  redis:
    image: redis:5.0.7